plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'org.liquibase.gradle' version '2.2.0'
    id 'com.gradleup.shadow' version '8.3.4'
    id 'java'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'

    implementation 'com.google.guava:guava:31.1-jre'
    implementation("net.dv8tion:JDA:5.0.1") {
      // Disable audio natives to reduce jar size by excluding `opus-java`
      exclude module: 'opus-java'
    }
    implementation 'org.postgresql:postgresql:42.6.2'
    implementation 'org.mybatis:mybatis:3.5.16'
    implementation 'com.zaxxer:HikariCP:5.1.0'
    implementation 'ch.qos.logback:logback-classic:1.5.7'

    liquibaseRuntime 'org.liquibase:liquibase-core:4.24.0'
    liquibaseRuntime 'info.picocli:picocli:4.7.5'
    liquibaseRuntime 'org.yaml:snakeyaml:1.33'
    liquibaseRuntime 'org.postgresql:postgresql:42.6.2'
}

apply plugin: "org.liquibase.gradle"

application {
    // Define the main class for the application.
    mainClass = 'com.nicolauscg.reminder.discord.bot.App'
}

// Load properties from file if it exists
def props = new Properties()
def propsFile = file("src/main/resources/env.properties")
if (propsFile.exists()) {
    propsFile.withInputStream { props.load(it) }
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

liquibase {
    activities {
        main {
            changelogFile "db/migrations.sql"
            url props.getProperty("DB_URL")
            username props.getProperty("DB_USERNAME")
            password props.getProperty("DB_PASSWORD")
            logLevel "severe"
        }
    }
    // commonly used liquibase targets:
    // ./gradlew update
    // ./gradlew rollbackCount -PliquibaseCommandValue=1
}

jar {
    manifest {
        attributes "Main-Class": "com.nicolauscg.reminder.discord.bot.App"
    }
}

tasks.named('shadowJar', com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar) {
   exclude 'env*.properties'
   exclude 'logback.xml'
}
